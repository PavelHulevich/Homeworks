"""
Существуют 3 типа доступа к атрибутам:
    • Публичные Public. Можем обращаться и менять вне класса.

    • Приватные Private (_одно подчеркивание перед названием атрибута). Также можем обращаться и менять вне класса,
      но подчеркивание говорит другим разработчикам, что туда лучше напрямую не лезть.

    • Защищенные Protected (__ два подчеркивания перед названием атрибута). Обращаться напрямую к защищенным атрибутам
      мы не можем. Только через отдельные созданные для этого методы. Т.е. мы создаем незащищенный метод и в нем уже
      обращаемся к защищенным атрибутам и возвращаем через return. А дальше при создании экземпляра класса можем
      обращаться к этим методам, как к любым другим.
"""


class Rectangle:

    def __init__(self, width, height):
        self._width = width
        self._height = height

    def get_width(self):
        return self._width

    def set_width(self, w):
        self._width = w

    def get_height(self):
        return self._height

    def set_height(self, h):
        self._height = h

    def area(self):
        return self._width * self._height


# для доступа к _width и _height используются специальные методы,
# но ничего не мешает вам обратиться к атрибутам напрямую.

rect = Rectangle(10, 20)
print(rect.get_width())
print(rect._width)
