import random

#  создание пустого кортежа
a = ()
print(a)

a = tuple()
print(a)

#  кортеж можно создать из итерируемого объекта
a = tuple('Python')
print(a)

#  кортежи состоят из объектов разного типа
t = ('row', 1, True)
b = (1, 2, 3, 4)
c = 'a', 'b', 'c'

#  Генерация кортежа с помощью цикла
t1 = tuple([i for i in range(1, 11)])
print(t1)

t2 = tuple(i for i in range(1, 11))
print(t2)

#  Заполнить кортеж 5 случайными числами из диапазона от 1 до 10
n = 5
t = tuple([random.randint(1, 20) for i in range(n)])
print(t)

#  Нельзя сгенерировать кортеж таким образом, мы получим генератор
#  t = (i for i in range(1, 11))
#  мы можем либо сгенерировать список и преобразовать его в кортеж
#  либо tuple(i for i in ...)
#  в обоих случая мы создаем последовательность а затем преобразовываем ее в кортеж


#  Получение данных из кортежа
t = (1, 2, 3, 4)
print(t[1])
print(t[1:3])

#  Объединение (склеивание) кортежей.
a = (1, 2, 5)
b = (3, 4)
c = a+b
print(c)

#  Вхождение элемента в кортеж, если элемент присутствует, то получаем True, иначе False.
print(7 in c)

#  Поиск максимального элемента кортежа. Работает только если все элементы кортежа однотипные.
print(max(c))
try:
    max((1, 2, 5, 'sdf'))
except TypeError:
    pass

#  Поиск минимального элемента кортежа. Работает только если все элементы кортежа однотипные.
print(min(c))
try:
    min((1, 2, 5, 'sdf'))
except TypeError:
    pass

#  Кортеж можно изменить, если один из его элементов изменяемы тип данных
t = ([1, 2], 2, 3)
print(t)

t[0].append(20)

print(t)
print(t[0][2])

